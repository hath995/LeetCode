{"id":817292084,"lang":"typescript","lang_name":"TypeScript","time":"1Â year","timestamp":1665158794,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/817292084/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"N/A","code":"function intersection(setA, setB) {\n  const _intersection = new Set();\n  for (const elem of setB) {\n    if (setA.has(elem)) {\n      _intersection.add(elem);\n    }\n  }\n  return _intersection;\n}\n\nfunction maxLength(arr: string[]): number {\n    arr = arr.filter(s => new Set(s).size == s.length);\n    let max = 0;\n    for(let i = 0; i < arr.length-1; i++) {\n        for(let j = i+1; j < arr.length; j++) {\n            if(intersection(new Set(arr[i]), new Set(arr[j]) ).size == 0) {\n                if(max < arr[i].length + arr[j].length) {\n                    max = arr[i].length + arr[j].length;\n                }\n            }\n        }\n    }\n    return max;\n};","compare_result":"11010010000101000100000000010000010000000110000001010010000011010011000101000000000000101","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters","has_notes":false,"flag_type":1}