{"id":819410526,"lang":"typescript","lang_name":"TypeScript","time":"1Â year","timestamp":1665413682,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/819410526/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"N/A","code":"function union<T>(setA: Set<T>, setB: Set<T>): Set<T> {\n    let _union = new Set(setA)\n    for (let elem of setB) {\n        _union.add(elem)\n    }\n    return _union\n}\n\nfunction intersection<T>(setA: Set<T>, setB: Set<T>): Set<T> {\n  const _intersection: Set<T> = new Set();\n  for (const elem of setB) {\n    if (setA.has(elem)) {\n      _intersection.add(elem);\n    }\n  }\n  return _intersection;\n}\n\nfunction maxLength(arr: string[]): number {\n    arr = arr.filter(s => new Set(s).size == s.length);\n    arr.push(\"\");\n    let maxes: Set<string>[] = []\n    for(let i = 0; i < arr.length-1; i++) {\n        let currentS: Set<string> = new Set(arr[i]);\n        //console.log(\"maxes\",maxes)\n        if(maxes.length > 0) {\n            for(let k = maxes.length - 1; k >= 0; k--) {\n                //console.log(currentS, maxes[k])\n                if(intersection(currentS, maxes[k]).size == 0) {\n                    let currentUnion: Set<string> = union(currentS, maxes[k]);\n                    if(currentUnion.size > maxes[maxes.length-1].size) {\n                        maxes.push(currentUnion);\n                        break;\n                    }\n                }else if(currentS.size > maxes[k].size && k == maxes.length-1) {\n                    maxes.push(currentS);\n                    break;\n                }\n            }\n        }else{\n            maxes.push(new Set(arr[i]));\n        }\n    }\n    return maxes[maxes.length-1].size;\n};\n/*\n\n        for(let j = i+1; j < arr.length; j++) {\n            if(intersection(new Set(arr[i]), new Set(arr[j]) ).size == 0) {\n                if(max < arr[i].length + arr[j].length) {\n                    max = arr[i].length + arr[j].length;\n                }\n            }\n        }\n*/","compare_result":"11100000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters","has_notes":false,"flag_type":1}