{"id":710528448,"lang":"typescript","lang_name":"TypeScript","time":"1 year, 4 months","timestamp":1653921447,"status":10,"status_display":"Accepted","runtime":"127 ms","url":"/submissions/detail/710528448/","is_pending":"Not Pending","title":"Count Equal and Divisible Pairs in an Array","memory":"45.4 MB","code":"// function countPairs(nums: number[], k: number): number {\n//     let count = 0;\n//     for(let i = 0; i < nums.length-1; i++) {\n//         for(let j = i+1; j < nums.length; j++) {\n//             if(nums[i] == nums[j] && (i*j) % k == 0) {\n//                 count++;\n//             }\n//         }\n//     }\n//     return count;\n// };\n\nfunction countPairs(nums: number[], k: number): number {\n    return countHelper(nums, k, 0 , 1);  \n};\n\nfunction satPairs(nums: number[], k: number, a: number, b: number) {\n    return nums[a] == nums[b] && (a*b) % k == 0\n}\n\nfunction countHelper(nums: number[], k: number, start: number, stop: number): number {\n    //console.log(start, stop);\n    if(!(k >0 )) {\n       throw new Error(\"K <= 0, k = \"+k)\n     }\n    if(!(start <= stop && start <= nums.length /*&& stop <= nums.length) */)) {\n        throw new Error(`indexes are out of bound ${start}, ${stop} >=? ${nums.length}`)\n    }\n    \n    if (start > stop || start == nums.length) {\n        return 0;\n    }else if(stop < nums.length) {\n        return satPairs(nums, k, start, stop) ? 1 + countHelper(nums, k, start, stop+1) : countHelper(nums, k, start, stop+1)\n    }else{\n        return countHelper(nums, k, start+1, start+2)\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-equal-and-divisible-pairs-in-an-array","has_notes":false,"flag_type":1}