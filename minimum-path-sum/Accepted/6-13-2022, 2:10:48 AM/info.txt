{"id":720822056,"lang":"typescript","lang_name":"TypeScript","time":"1 year, 4 months","timestamp":1655079048,"status":10,"status_display":"Accepted","runtime":"182 ms","url":"/submissions/detail/720822056/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"45.4 MB","code":"function val(grid: number[], x: number, y: number): number {\n    if (x < 0 || y < 0) {\n        return Infinity;\n    }\n    return grid[x][y];\n}\n\nfunction minPathSum(grid: number[][]): number {\n    const m = grid.length;\n    const n = grid[0].length;\n    let minCosts = new Array(grid.length);\n    for(let i = 0; i < m; i++) {\n        minCosts[i] = new Array(grid[i].length);\n        minCosts[i].fill(0);\n    }\n    for(let i = 0; i < m; i++) {\n        for(let k = 0; k < n; k++) {\n            if(k == 0 && i == 0) {\n                minCosts[i][k] = grid[i][k];\n            }else{\n            minCosts[i][k] = Math.min(val(minCosts,i-1,k), val(minCosts,i,k-1)) + grid[i][k];\n            }\n        }\n    }\n    //console.log(minCosts);\n    return minCosts[m-1][n-1];\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}