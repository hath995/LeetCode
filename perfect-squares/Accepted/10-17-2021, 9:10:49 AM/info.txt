{"id":572539036,"lang":"typescript","lang_name":"TypeScript","time":"2Â years","timestamp":1634454649,"status":10,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/572539036/","is_pending":"Not Pending","title":"Perfect Squares","memory":"43.4 MB","code":"//function numSquares(n: number): number {\n//  let nums=[];\n//  let sqs=[];\n//  for(let i=0; i<=n; i++) {\n//    if (i*i <= n) nums[i*i] = 1;\n//    if(nums[i] !== 1) {\n//      //console.log(sqs);\n//      let steps = sqs.reduce((best, cur)  => Math.min(best, i % cur == 0 ? i/cur : nums[i-Math.floor(i/cur)*cur]+Math.floor(i/cur)), Infinity)\n//      nums[i] = steps; \n//    }else{\n//      if(i>0) sqs.push(i);\n//    }\n//    //console.log(i,sqs); \n//    //console.log(nums); \n//  }\n//  //console.log(nums); \n//  return nums[n];\n//};\n\nfunction numSquares(n: number): number {\n  let nums = new Array(n+1);\n  nums.fill(Infinity);\n  nums[0] = 0;\n  let count = 1;\n  while(count * count <= n) {\n    let sq = count * count;\n    for(let i = sq; i <= n; i++) {\n      nums[i] = Math.min(nums[i-sq]+1, nums[i]);\n    }\n    //console.log(nums)\n    count++;\n  }\n  return nums[n];\n}","compare_resulttitle_slug":"perfect-squares","has_notes":false,"flag_type":1}