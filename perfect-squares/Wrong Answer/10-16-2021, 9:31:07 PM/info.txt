{"id":572258385,"lang":"typescript","lang_name":"TypeScript","time":"2Â years","timestamp":1634412667,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/572258385/","is_pending":"Not Pending","title":"Perfect Squares","memory":"N/A","code":"function numSquares(n: number): number {\n  const nroot = Math.floor(Math.sqrt(n));\n  let nums=[];\n  let sqs=[];\n  for(let i=0; i<=n; i++) {\n    nums[i*i] = 1;\n    if(i!==0 && i*i < n) sqs.push(i*i);\n    if(nums[i] !== 1) {\n      let sum = i;\n      let steps = 0;\n      let sqi = sqs.length-1;\n      while(sum !==0 && steps <= n) {\n        while(sqs[sqi] > i) {\n          sqi--;\n        }\n        //console.log(i, sum, sqi, sqs[sqi])\n        let greedy = sqs[sqi];\n        if(sqs.length == 1 || nums[i-sqs[sqi-1]] == undefined) {\n          sum -= greedy;\n          steps += nums[sqs[sqi]];\n        }else if(nums[i-greedy]+1 <= nums[i-sqs[sqi-1]]+1) {\n          steps = 1 + nums[i-greedy];\n          sum  = 0;\n        }else{\n          steps = 1 + nums[i-sqs[sqi-1]];\n          sum  = 0;\n        }\n      \n      }\n      nums[i] = steps; \n    }\n  }\n  //console.log(nums); \n  return nums[n];\n};\n//Math.min(nums[i-greedy]+1, nums[i-greedy2]+1);\n// 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n//[1,1,2,3,1,2,3,4,2,1,2 ,3 ,3 ,2 ,3, 4, 1]","compare_resulttitle_slug":"perfect-squares","has_notes":false,"flag_type":1}