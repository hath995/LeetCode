{"id":540564121,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 2 months","timestamp":1629314518,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/540564121/","is_pending":"Not Pending","title":"Rotate Image","memory":"N/A","code":"function forwardRotationPermutation(n) {\n    return function(index) {\n        return index * n  % (n*n+1);\n    }\n}\n\nfunction arr2pos(n, y,x) {\n    return n*y+x+1;\n};\n\nfunction pos2arr(n, p) {\n    return [Math.floor((p-1)/n), (p-1)%n]\n}\n\nfunction swapInPlace(mat) {\n    const n = mat.length;\n    let perm = forwardRotationPermutation(n);\n    let generators = new Set();\n    for(let i=1;i < n; i++) {\n        generators.add(i);\n        if(i < n/2 ) {\n            for(let k=i; k < n-2*i; k++) {\n                generators.add(arr2pos(n,i,k));\n            }\n        }\n    }\n\n    for(let i of generators) {\n        let temp = null;\n        let k = i;\n        while(k !== i || temp == null) {\n            //console.log(k);\n            let j = perm(k);\n            let [y,x] = pos2arr(n,k);\n            let [a,b] = pos2arr(n, j);\n            let localtemp = mat[a][b];\n\n            mat[a][b] = temp === null ? mat[y][x] : temp;\n            temp = localtemp;\n            k = j;\n        }\n    }\n}\n\n/**\n * @param {number[][]} matrix\n * @return {void} Do not return anything, modify matrix in-place instead.\n */\nvar rotate = function(matrix) {\n    swapInPlace(matrix);    \n};","compare_result":"111111000000000000000","title_slug":"rotate-image","has_notes":false,"flag_type":1}