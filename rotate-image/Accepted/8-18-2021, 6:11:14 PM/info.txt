{"id":540480395,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 2 months","timestamp":1629303074,"status":10,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/540480395/","is_pending":"Not Pending","title":"Rotate Image","memory":"40.5 MB","code":"function forwardRotationPermutation(n) {\n    return function(index) {\n        return index * n  % (n*n+1);\n    }\n}\n\nfunction arr2pos(n, y,x) {\n    return n*y+x+1;\n};\n\nfunction pos2arr(n, p) {\n    return [Math.floor((p-1)/n), (p-1)%n]\n}\n\nfunction swapInPlace(mat) {\n    const n = mat.length;\n    const nsq = n * n / 2;\n    let perm = forwardRotationPermutation(n);\n    let visited = new Array(Math.ceil(nsq/32));\n    visited.fill(0);\n    for(let i=1; i <= nsq; i++) {\n        let s = Math.floor(i/32);\n        let t = i%32;\n        if(visited[s] & (1 << t)) continue;\n        let temp = null;\n        let k = i;\n        while(!(visited[s] & (1 << t))) {\n            //console.log(k);\n            visited[s] = visited[s] | (1 << t);\n            let j = perm(k);\n            if(j==k) continue;\n            let [y,x] = pos2arr(n,k);\n            let [a,b] = pos2arr(n, j);\n            let localtemp = mat[a][b];\n\n            mat[a][b] = temp === null ? mat[y][x] : temp;\n            temp = localtemp;\n            k = j;\n            s = Math.floor(k/32);\n            t = k%32;\n        }\n    }\n}\n\n/**\n * @param {number[][]} matrix\n * @return {void} Do not return anything, modify matrix in-place instead.\n */\nvar rotate = function(matrix) {\n    swapInPlace(matrix);    \n};","compare_result":"111111111111111111111","title_slug":"rotate-image","has_notes":false,"flag_type":1}