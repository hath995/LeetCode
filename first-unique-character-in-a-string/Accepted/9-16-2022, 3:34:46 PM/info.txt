{"id":801274682,"lang":"typescript","lang_name":"TypeScript","time":"1 year, 1 month","timestamp":1663335286,"status":10,"status_display":"Accepted","runtime":"146 ms","url":"/submissions/detail/801274682/","is_pending":"Not Pending","title":"First Unique Character in a String","memory":"46.7 MB","code":"function difference<A>(setA: Set<A>, setB: Set<A>): Set<A> {\n    let _difference = new Set(setA)\n    for (let elem of setB) {\n        _difference.delete(elem)\n    }\n    return _difference\n}\n\nfunction firstUniqChar(s: string): number {\n    let letterIndices: {[key: string]: number} = {};\n    let letters: Set<string> = new Set();\n    let dupes: Set<string> = new Set();\n    const n = s.length;\n    for(let i = 0; i < n; i++) {\n        if(letters.has(s[i])) {\n            dupes.add(s[i])\n        }else{\n            letterIndices[s[i]] = i;\n        }\n        letters.add(s[i]);\n    }\n    //console.log(letters, dupes)\n    let uniques = difference(letters, dupes);\n    //console.log(uniques)\n    let uniqueIndex = -1;\n    for(let letter of uniques) {\n       if(uniqueIndex == -1 || uniqueIndex > letterIndices[letter]) {\n           uniqueIndex = letterIndices[letter];\n       }\n    }\n    return uniqueIndex;\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"first-unique-character-in-a-string","has_notes":false,"flag_type":1}