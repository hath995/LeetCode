{"id":801173285,"lang":"typescript","lang_name":"TypeScript","time":"1 year, 1 month","timestamp":1663322252,"status":10,"status_display":"Accepted","runtime":"159 ms","url":"/submissions/detail/801173285/","is_pending":"Not Pending","title":"Unique Email Addresses","memory":"47.4 MB","code":"function canonical(email: string): string {\n    let [localname, domainName] = email.split(\"@\");\n    let canonicalLocal = \"\";\n    let encounteredPlus = false;\n    for(let i = 0; i < localname.length; i++) {\n        if(localname[i] == \".\") {\n            continue;\n        }\n        if(localname[i] == \"+\") {\n            break;\n        }\n        canonicalLocal += localname[i];\n    }\n    return `${canonicalLocal}@${domainName}`;\n}\n\nfunction canonicalRegex(email: string): string {\n    let [localname, domainName] = email.split(\"@\");\n    return localname.replace(/(\\.|\\+(.+))/g,\"\") + \"@\" + domainName;\n}\n\nfunction numUniqueEmails(emails: string[]): number {\n    let uniqueEmails = new Set();\n    for(let email of emails) {\n        uniqueEmails.add(canonicalRegex(email));\n    }\n    return uniqueEmails.size;\n};\n\nfunction numUniqueEmailsReduce(emails: string[]): number {\n    return emails.reduce((emailSet, email) => emailSet.add(canonical(email)), new Set()).size;\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-email-addresses","has_notes":false,"flag_type":1}