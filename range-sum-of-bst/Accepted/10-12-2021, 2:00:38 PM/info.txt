{"id":569991518,"lang":"typescript","lang_name":"TypeScript","time":"2Â years","timestamp":1634040038,"status":10,"status_display":"Accepted","runtime":"306 ms","url":"/submissions/detail/569991518/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"92.7 MB","code":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     val: number\n *     left: TreeNode | null\n *     right: TreeNode | null\n *     constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.left = (left===undefined ? null : left)\n *         this.right = (right===undefined ? null : right)\n *     }\n * }\n */\n\nfunction rangeSumBST(root: TreeNode | null, low: number, high: number): number {\n  if(!root) return 0;\n  let result = 0;\n  if(root.val >= low && root.val <= high) {\n    result += root.val;\n  }\n  if(root.left) {\n    result +=  rangeSumBST(root.left, low, high);\n  }\n  if(root.right && root.val < high) {\n    result +=  rangeSumBST(root.right, low, high);\n  }\n  \n  return result;\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst","has_notes":false,"flag_type":1}