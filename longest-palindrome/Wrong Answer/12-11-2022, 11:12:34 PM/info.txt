{"id":858321347,"lang":"typescript","lang_name":"TypeScript","time":"10 months, 2 weeks","timestamp":1670796754,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/858321347/","is_pending":"Not Pending","title":"Longest Palindrome","memory":"N/A","code":"function toMultiset(s: string): Map<string, number> {\n    const s_mset: Map<string, number> = new Map();\n    for(let char of s) {\n        if(s_mset.has(char)) {\n            s_mset.set(char, s_mset.get(char)+1);\n        }else{\n            s_mset.set(char, 1);\n        }\n    }\n    return s_mset;\n}\n\nfunction msetEqual(s: Map<string, number>, t: Map<string, number>): boolean {\n\n    for(let [lchar,] of s) {\n        if(!(s.get(lchar) === t.get(lchar))) {\n            return false;\n        }\n    }\n\n    for(let [rchar,] of t) {\n        if(!(s.get(rchar) === t.get(rchar))) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction longestPalindrome(s: string): number {\n    let smset = toMultiset(s);\n    let length = 0;\n    let odd = false;\n    for(let [letter, count] of smset.entries()) {\n        if(count % 2 == 0) {\n            length += count;\n        }else if(!odd) {\n            length += count;\n            odd = true;\n        }\n    }\n    return length;\n};","compare_result":"11111111111111100111111111111111111100000000000000000000000000000000000000100000000111111111111","title_slug":"longest-palindrome","has_notes":false,"flag_type":1}