{"id":858325133,"lang":"typescript","lang_name":"TypeScript","time":"10 months, 2 weeks","timestamp":1670797606,"status":10,"status_display":"Accepted","runtime":"93 ms","url":"/submissions/detail/858325133/","is_pending":"Not Pending","title":"Longest Palindrome","memory":"44.7 MB","code":"function toMultiset(s: string): Map<string, number> {\n    const s_mset: Map<string, number> = new Map();\n    for(let char of s) {\n        if(s_mset.has(char)) {\n            s_mset.set(char, s_mset.get(char)+1);\n        }else{\n            s_mset.set(char, 1);\n        }\n    }\n    return s_mset;\n}\n\nfunction longestPalindrome(s: string): number {\n    let smset = toMultiset(s);\n    let length = 0;\n    let odds = [];\n    for(let count of smset.values()) {\n        if(count % 2 == 0) {\n            length += count;\n        }else {\n            odds.push(count);\n        }\n    }\n    if(odds.length > 0) {\n      odds.sort();\n      length += odds.pop();\n      length += odds.reduce((total, x) => total+x-1, 0);\n    }\n\n    return length;\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindrome","has_notes":false,"flag_type":1}