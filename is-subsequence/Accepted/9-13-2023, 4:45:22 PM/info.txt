{"id":1048456389,"lang":"typescript","lang_name":"TypeScript","time":"1 month, 1 week","timestamp":1694616322,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/1048456389/","is_pending":"Not Pending","title":"Is Subsequence","memory":"42.8 MB","code":"function toMultiset(s: string): Map<string, number> {\n    const s_mset: Map<string, number> = new Map();\n    for(let char of s) {\n        if(s_mset.has(char)) {\n            s_mset.set(char, s_mset.get(char)+1);\n        }else{\n            s_mset.set(char, 1);\n        }\n    }\n    return s_mset;\n}\n\nfunction msetLTE(s: Map<string, number>, t: Map<string, number>): boolean {\n    \n    for(let [lchar,] of s) {\n        if(!(s.get(lchar) <= t.get(lchar))) {\n            return false;\n        }\n    }\n    \n    return true;\n}\n\nfunction isSubsequence(s: string, t: string): boolean {\n    if(s.length > t.length) return false;\n    if(s.length == 0) return true;\n\n    // let left = toMultiset(s);\n    // let right = toMultiset(t);\n    // if(!msetLTE(left, right)) {\n    //     return false\n    // }\n    // let tindex = 0;\n    // outer: for(let i = 0; i < s.length; i++) {\n    //     for(let k=tindex; k < t.length; k++) {\n    //         if(t[k] == s[i]) {\n    //             tindex = k+1;\n    //             continue outer;\n    //         }\n    //     }\n    //     return false\n    // }\n    // return true;\n    const t_length = t.length;\n    let si = 0;\n    for(let i = 0; i < t_length; i++) {\n        if(s[si] == t[i]) {\n            si++;\n        }\n    }\n    return si == s.length;\n};","compare_result":"1111111111111111111","title_slug":"is-subsequence","has_notes":false,"flag_type":1}