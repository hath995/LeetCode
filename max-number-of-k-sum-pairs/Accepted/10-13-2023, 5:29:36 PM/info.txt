{"id":1074347027,"lang":"typescript","lang_name":"TypeScript","time":"1 week, 3 days","timestamp":1697210976,"status":10,"status_display":"Accepted","runtime":"89 ms","url":"/submissions/detail/1074347027/","is_pending":"Not Pending","title":"Max Number of K-Sum Pairs","memory":"58.2 MB","code":"function toMultiset(s: number[]): Map<number, number> {\n    const s_mset: Map<number, number> = new Map();\n    for(let num of s) {\n        let count = s_mset.get(num);\n        if(count !== undefined) {\n            s_mset.set(num, count+1);\n        }else{\n            s_mset.set(num, 1);\n        }\n    }\n    return s_mset;\n}\n\nfunction maxOperations(nums: number[], k: number): number {\n    let ms = toMultiset(nums);\n    let count = 0;\n    for(let key of ms.keys()) {\n        const compl = k-key\n        let keycard = ms.get(key), complcard = ms.get(compl);\n        // while((keycard = ms.get(key), keycard > 0) && (key !== compl || keycard > 1) && ( key === compl || (complcard = ms.get(compl), complcard !== undefined && complcard > 0))) {\n        //     count++;\n        if(key == compl) {\n            let c = keycard >> 1;\n            // console.log(c, keycard, complcard)\n            count += c;\n            ms.set(key, keycard-c);\n        }else if (complcard !== undefined) {\n            let c = Math.min(keycard, complcard);\n            // console.log(c, keycard, complcard)\n            count += c;\n            ms.set(key, keycard-c);\n            ms.set(compl, complcard-c);\n        }\n        // }\n    }\n    return count;\n};","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"max-number-of-k-sum-pairs","has_notes":false,"flag_type":1}