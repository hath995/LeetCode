{"id":1048088431,"lang":"typescript","lang_name":"TypeScript","time":"1 month, 1 week","timestamp":1694582478,"status":10,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/1048088431/","is_pending":"Not Pending","title":"Merge Strings Alternately","memory":"45.2 MB","code":"function mergeAlternately(word1: string, word2: string): string {\n    // let result = [];\n    // let length = Math.min(word1.length, word2.length)*2;\n    // //abc\n    // //pqr xxx\n    // //abcpqrxxx\n    // let left = 0, right = 0;\n    // for(let i = 0; i < length; i++) {\n    //     result[i] = i % 2 === 0 ? word1[left++] : word2[right++];\n    //     //[a,p,b,q,c,r]\n    // }\n    // if(word1.length > word2.length) {\n    //     result = result.concat(word1.slice(left));\n    // }else if(word1.length < word2.length){\n    //     result = result.concat(word2.slice(right));\n    // }\n    // return result.join(\"\");\n    // const result = new Array(word1.length+word2.length).fill(\"\");\n    // for(let i = 0,left = 0, right = 0; i < word1.length+word2.length; i++) {\n    //     result[i] = i % 2 == 0 && left < word1.length || right >= word2.length && left < word1.length ? word1[left++] : word2[right++];\n    // }\n    // return result.join(\"\");\n    \n    let left = 0, right = 0;\n    return new Array(word1.length+word2.length).fill(\"\").reduce((result, x, i) => result + (i % 2 == 0 && left < word1.length || right >= word2.length && left < word1.length ? word1[left++] : word2[right++]),\"\");\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-strings-alternately","has_notes":false,"flag_type":1}