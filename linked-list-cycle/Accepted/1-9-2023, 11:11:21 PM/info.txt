{"id":875033599,"lang":"typescript","lang_name":"TypeScript","time":"9 months, 2 weeks","timestamp":1673302281,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/875033599/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"46 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     val: number\n *     next: ListNode | null\n *     constructor(val?: number, next?: ListNode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.next = (next===undefined ? null : next)\n *     }\n * }\n */\n\nfunction hasCycle(head: ListNode | null): boolean {\n    let leader = head;\n    let follower = head;\n    while(leader !== null) {\n        leader = leader.next;\n        if(follower && follower.next) {\n            follower = follower.next.next;\n        }else if(follower && follower.next == null){\n            follower=follower.next;\n        }\n        if(follower == leader && follower != null) return true;\n    }\n    return false;\n};","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}