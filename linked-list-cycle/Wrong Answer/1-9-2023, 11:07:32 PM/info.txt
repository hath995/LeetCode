{"id":875032148,"lang":"typescript","lang_name":"TypeScript","time":"9 months, 2 weeks","timestamp":1673302052,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/875032148/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     val: number\n *     next: ListNode | null\n *     constructor(val?: number, next?: ListNode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.next = (next===undefined ? null : next)\n *     }\n * }\n */\n\nfunction hasCycle(head: ListNode | null): boolean {\n    let leader = head;\n    let follower = head;\n    while(leader !== null) {\n        leader = leader.next;\n        if(follower && follower.next) {\n            follower = follower.next.next;\n        }\n        if(follower == leader && follower != null) return true;\n    }\n    return false;\n};","compare_result":"11111111111111011111011","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}