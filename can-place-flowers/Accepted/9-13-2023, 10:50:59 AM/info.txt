{"id":1048226479,"lang":"typescript","lang_name":"TypeScript","time":"1 month, 1 week","timestamp":1694595059,"status":10,"status_display":"Accepted","runtime":"66 ms","url":"/submissions/detail/1048226479/","is_pending":"Not Pending","title":"Can Place Flowers","memory":"45.8 MB","code":"// function canPlaceFlowers(flowerbed: number[], n: number): boolean {\n//     for(let i = 0; i < flowerbed.length; i++) {\n//         if(flowerbed[i] == 0 && n > 0) {\n//             if((i-1 >=0 && flowerbed[i-1] == 0 || i-1 < 0) && (i+1 < flowerbed.length && flowerbed[i+1] == 0 || i+1 >= flowerbed.length)) {\n//                 n--;\n//                 flowerbed[i] = 1;\n//             }\n//         }\n//         if(n == 0) {\n//             break;\n//         }\n//     }\n//     console.log(n)\n//     return n == 0;\n// };\n\nfunction isEmpty(fb: number[], i: number): boolean {\n    return fb[i] === 0;\n}\n\nfunction implies(cond: boolean, trigger: () => boolean) {\n    return cond && trigger() || !cond;\n}\n\nfunction noAdjacent(fb: number[], i: number): boolean {\n    // return (i-1 >=0 && isEmpty(fb, i-1) || i-1 < 0) && (i+1 < fb.length && isEmpty(fb, i+1) || i+1 >= fb.length)\n    return implies(i-1 >=0,()=> isEmpty(fb, i-1)) && implies(i+1 < fb.length, () => isEmpty(fb, i+1))\n}\n\nfunction canPlaceFlowers(flowerbed: number[], n: number): boolean {\n    for(let i = 0; i < flowerbed.length; i++) {\n        if(isEmpty(flowerbed, i) && n > 0 && noAdjacent(flowerbed, i)) {\n            n--;\n            flowerbed[i] = 1;\n        }\n        if(n == 0) {\n            break;\n        }\n    }\n    return n == 0;\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"can-place-flowers","has_notes":false,"flag_type":1}