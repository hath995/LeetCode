{"id":832039687,"lang":"typescript","lang_name":"TypeScript","time":"12Â months","timestamp":1666959860,"status":10,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/832039687/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"47.2 MB","code":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     val: number\n *     left: TreeNode | null\n *     right: TreeNode | null\n *     constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.left = (left===undefined ? null : left)\n *         this.right = (right===undefined ? null : right)\n *     }\n * }\n */\n\nfunction isValidBST(root: TreeNode | null): boolean {\n    return validBst(root, -Infinity, Infinity);\n        \n};\n\nfunction validBst(root: TreeNode | null, minVal: number, maxVal: number): boolean {\n   if(root == null) return true;\n   if(root.val >= maxVal || root.val <= minVal) return false;\n   return validBst(root.left, minVal, root.val) && validBst(root.right, root.val, maxVal);\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}