{"id":928467676,"lang":"typescript","lang_name":"TypeScript","time":"6 months, 3 weeks","timestamp":1680701022,"status":10,"status_display":"Accepted","runtime":"259 ms","url":"/submissions/detail/928467676/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"44.6 MB","code":"function isPalindrome(s: string): boolean {\n    const length = s.length;\n    const halfLength = length >> 1;\n    if(s.length == 1) return true;\n    for(let i = 0; i < halfLength; i++) {\n        if(s[i] !== s[length - 1 - i]) return false;\n    }\n    return true;\n}\n\nfunction isPalindrome2(s: string, start: number, length: number): boolean {\n    const halfLength = length >> 1;\n    if(length == 1) return true;\n    for(let i = 0; i < halfLength; i++) {\n        if(s[start+i] !== s[(start+length) - 1 - i]) return false;\n    }\n    return true;\n}\n\n\n\nfunction longestPalindrome(s: string): string {\n    if(s.length == 1) return s;\n    for(let i = s.length; i > 0; i--) {\n        for(let j=0; j+i<=s.length; j++) {\n            //let slice = s.slice(j,j+i);\n            //console.log(i, j, slice, j,j+i);\n            if(isPalindrome2(s, j, i)) return s.slice(j, j+i);\n        }\n    }\n    throw new Error(\"got here:\"+s);\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}