{"id":797491424,"lang":"typescript","lang_name":"TypeScript","time":"1 year, 1 month","timestamp":1662938247,"status":10,"status_display":"Accepted","runtime":"233 ms","url":"/submissions/detail/797491424/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"51.3 MB","code":"function toMultiset(s: string): Map<string, number> {\n    const s_mset: Map<string, number> = new Map();\n    for(let char of s) {\n        if(s_mset.has(char)) {\n            s_mset.set(char, s_mset.get(char)+1);\n        }else{\n            s_mset.set(char, 1);\n        }\n    }\n    return s_mset;\n}\n\nfunction isSubset(left: Map<string, number>, right: Map<string, number>) {\n    for(let [lchar, lcount] of left) {\n        if(!(right.has(lchar) && lcount <= right.get(lchar))) {\n           return false;\n        }\n    }\n    return true;\n}\n\nfunction minWindow(s: string, t: string): string {\n    \n    //exists x,y :: 0 <= x < y < |s| && multiset(t) <= multiset(s[x..y]) && forall i,j :: multiset(s[i..j]) <= multiset(t) ==> |s[i..j]| <= |sp[x..y]|\n    const m = s.length;\n    const n = t.length;\n    if (m < n) {\n        return \"\";\n    }\n    \n    const tms = toMultiset(t);\n    const window_ms = new Map<string, number>();\n    \n    let l = 0, r = 0;\n    let finalString = \"\";\n    while(r < m) \n    \n    {\n        if(window_ms.has(s[r])) {\n            window_ms.set(s[r], window_ms.get(s[r])+1);\n        }else{\n            window_ms.set(s[r], 1);\n        }\n        \n        //console.log(window_ms)\n        if(isSubset(tms, window_ms)) {\n            //console.log(\"ms\", window_ms)\n            let substr1 = s.substring(l, r+1);\n            \n            finalString = finalString.length > 0 && finalString.length < substr1.length ? finalString : substr1;\n            \n            while(l <= r) {\n                //console.log(l, window_ms);\n                //console.log(finalString)\n                //if(window_ms.has(s[l])) {\n                    window_ms.set(s[l], window_ms.get(s[l])-1);\n                    //if(window_ms.get(s[l]) > 1) {\n                    //window_ms.set(s[l], window_ms.get(s[l])-1);\n                    //}else{\n                    //    window_ms.delete(s[l])\n                    //}\n                //}\n                if(!isSubset(tms, window_ms)) {\n                    //console.log(\"got here?\")\n                    let substr2 = s.substring(l, r+1);\n                    finalString = finalString.length > 0 && finalString.length < substr2.length ? finalString : substr2;\n                    l++;\n                    break;\n                }\n                l++;\n            }\n        }\n        r++;\n    }\n    \n    return finalString;\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}