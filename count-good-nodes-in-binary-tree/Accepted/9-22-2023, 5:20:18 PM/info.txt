{"id":1056393918,"lang":"typescript","lang_name":"TypeScript","time":"1Â month","timestamp":1695396018,"status":10,"status_display":"Accepted","runtime":"106 ms","url":"/submissions/detail/1056393918/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"79.4 MB","code":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     val: number\n *     left: TreeNode | null\n *     right: TreeNode | null\n *     constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.left = (left===undefined ? null : left)\n *         this.right = (right===undefined ? null : right)\n *     }\n * }\n */\n\n function count(root: TreeNode | null, maxInPath: number): number {\n     if (root === null) return 0;\n     const max = Math.max(maxInPath, root.val);\n     if(root.val >= maxInPath) {\n         return 1 + count(root.left, max)+ count(root.right, max);\n     }else{\n         return  count(root.left, max)+ count(root.right, max);\n     }\n }\n\nfunction goodNodes(root: TreeNode | null): number {\n    return count(root, -Infinity)\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree","has_notes":false,"flag_type":1}