{"id":792114880,"lang":"typescript","lang_name":"TypeScript","time":"1 year, 1 month","timestamp":1662384102,"status":10,"status_display":"Accepted","runtime":"153 ms","url":"/submissions/detail/792114880/","is_pending":"Not Pending","title":"Valid Anagram","memory":"45.2 MB","code":"function toMultiset(s: string): Map<string, number> {\n    const s_mset: Map<string, number> = new Map();\n    for(let char of s) {\n        if(s_mset.has(char)) {\n            s_mset.set(char, s_mset.get(char)+1);\n        }else{\n            s_mset.set(char, 1);\n        }\n    }\n    return s_mset;\n}\n\nfunction msetEqual(s: Map<string, number>, t: Map<string, number>): boolean {\n    \n    for(let [lchar,] of s) {\n        if(!(s.get(lchar) === t.get(lchar))) {\n            return false;\n        }\n    }\n    \n    for(let [rchar,] of t) {\n        if(!(s.get(rchar) === t.get(rchar))) {\n            return false;\n        }\n    }\n    \n    return true;\n}\n\nfunction isAnagram(s: string, t: string): boolean {\n    return msetEqual(toMultiset(s), toMultiset(t));\n};","compare_result":"1111111111111111111111111111111111111","title_slug":"valid-anagram","has_notes":false,"flag_type":1}