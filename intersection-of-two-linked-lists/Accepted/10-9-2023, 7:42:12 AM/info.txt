{"id":1070674247,"lang":"typescript","lang_name":"TypeScript","time":"2Â weeks","timestamp":1696830132,"status":10,"status_display":"Accepted","runtime":"85 ms","url":"/submissions/detail/1070674247/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"50.4 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     val: number\n *     next: ListNode | null\n *     constructor(val?: number, next?: ListNode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.next = (next===undefined ? null : next)\n *     }\n * }\n */\n\n function len(head: ListNode | null): number {\n     if(head === null) return 0;\n     let length = 0;\n     for(;head != null; head = head.next, length++) {\n     }\n     return length;\n }\n\nfunction getIntersectionNode(headA: ListNode | null, headB: ListNode | null): ListNode | null {\n    let lengtha = len(headA), lengthb = len(headB);\n    let k = Math.abs(lengtha-lengthb);\n    if(lengtha <= lengthb) {\n        while(k--) {\n            headB = headB.next;\n        }\n    }else{\n        while(k--) {\n            headA = headA.next;\n        }\n    }\n    while(headA !== null) {\n        if(headA == headB) return headA;\n        headA = headA.next;\n        headB = headB.next;\n    }\n    return null;\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists","has_notes":false,"flag_type":1}