{"id":888832670,"lang":"typescript","lang_name":"TypeScript","time":"8 months, 3 weeks","timestamp":1675180058,"status":10,"status_display":"Accepted","runtime":"82 ms","url":"/submissions/detail/888832670/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"44.8 MB","code":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     val: number\n *     left: TreeNode | null\n *     right: TreeNode | null\n *     constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.left = (left===undefined ? null : left)\n *         this.right = (right===undefined ? null : right)\n *     }\n * }\n */\n\nfunction invertTree(root: TreeNode | null): TreeNode | null {\n    if(root == null) return null;\n    let leftChild = invertTree(root.left);\n    let rightChild = invertTree(root.right);\n    root.right = leftChild;\n    root.left = rightChild;\n    return root;\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}