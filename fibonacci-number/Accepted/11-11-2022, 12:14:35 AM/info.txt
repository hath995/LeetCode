{"id":841025739,"lang":"typescript","lang_name":"TypeScript","time":"11 months, 2 weeks","timestamp":1668122075,"status":10,"status_display":"Accepted","runtime":"94 ms","url":"/submissions/detail/841025739/","is_pending":"Not Pending","title":"Fibonacci Number","memory":"42.6 MB","code":"// function fib(n: number, index: number = 1, curr: number = 0, next: number = 1): number {\n//     if(n == 0) return 0;\n//     if(n == 1) return 1;\n//     \n//     if(index >= n) {\n//         return next;\n//     }else{\n//         return fib(n, index + 1, next, curr+next);\n//     }\n// };\n\nlet times = (...matrices) =>\n  matrices.reduce(\n    ([a,b,c], [d,e,f]) => [a*d + b*e, a*e + b*f, b*e + c*f]\n  );\n\nlet power = (matrix, n) => {\n  if (n === 1) return matrix;\n\n  let halves = power(matrix, Math.floor(n / 2));\n\n  return n % 2 === 0\n         ? times(halves, halves)\n         : times(halves, halves, matrix);\n}\n\nlet fib = (n) =>\n  n < 2\n  ? n\n  : power([1, 1, 0], n - 1)[0];","compare_result":"1111111111111111111111111111111","title_slug":"fibonacci-number","has_notes":false,"flag_type":1}