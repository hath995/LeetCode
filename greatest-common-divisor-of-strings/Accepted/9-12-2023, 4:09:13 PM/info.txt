{"id":1047506270,"lang":"typescript","lang_name":"TypeScript","time":"1 month, 1 week","timestamp":1694527753,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/1047506270/","is_pending":"Not Pending","title":"Greatest Common Divisor of Strings","memory":"44.8 MB","code":"function gcdOfStrings(str1: string, str2: string): string {\n    let minString = str1.length < str2.length ? str1 : str2;\n    const n = str1.length, m = str2.length;\n    br: for(let i=minString.length; i > 0; i--) {\n        const slice = minString.slice(0,i);\n        if(n % i == 0 && m % i == 0) {\n            \n            // for(let k = 0; k < n/i; k++) {\n            //     if(str1.slice(i*k,i*(k+1)) != slice) {\n            //         continue br;\n            //     }\n            // }\n            // for(let k = 0; k < m/i; k++) {\n            //     if(str2.slice(i*k,i*(k+1)) != slice) {\n            //         continue br;\n            //     }\n            // }\n\n            // if(str1 != slice.repeat(n / i) || str2 != slice.repeat(m / i)) {\n            // console.log(`(${slice}){${n/i}}`, `(${slice}){${m/i}}`, new RegExp(`(${slice}){${n/i}}`).test(str1), new RegExp(`(${slice}){${m/i}}`).test(str2))\n            if(!new RegExp(`(${slice}){${n/i}}`).test(str1) || !new RegExp(`(${slice}){${m/i}}`).test(str2)) {\n                continue br;\n            }\n            return slice;\n        }\n    }\n    return \"\";\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"greatest-common-divisor-of-strings","has_notes":false,"flag_type":1}