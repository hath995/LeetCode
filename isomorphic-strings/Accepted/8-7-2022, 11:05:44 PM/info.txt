{"id":767894702,"lang":"typescript","lang_name":"TypeScript","time":"1 year, 2 months","timestamp":1659906344,"status":10,"status_display":"Accepted","runtime":"144 ms","url":"/submissions/detail/767894702/","is_pending":"Not Pending","title":"Isomorphic Strings","memory":"46.8 MB","code":"function isIsomorphic(s: string, t: string): boolean {\n\n    let sMap = new Map<string, number>();\n    let sTransform: number[] = [];\n    let tMap = new Map<string, number>();\n    let tTransform: number[] = [];\n    \n    let sIndex = 1;\n    let tIndex = 1;\n    if(s.length != t.length) return false\n    \n    for(let i = 0; i < s.length; i++) {\n        if(!sMap.has(s[i])) {\n            sMap.set(s[i], sIndex++);\n        }\n        sTransform.push(sMap.get(s[i])); \n    }\n    \n    for(let i = 0; i < t.length; i++) {\n        if(!tMap.has(t[i])) {\n            tMap.set(t[i], tIndex++);\n        }\n        tTransform.push(tMap.get(t[i])); \n    }\n    \n    return sTransform.every((elem, index) => elem == tTransform[index]);\n};","compare_result":"1111111111111111111111111111111111111111111","title_slug":"isomorphic-strings","has_notes":false,"flag_type":1}