{"id":1050435149,"lang":"typescript","lang_name":"TypeScript","time":"1 month, 1 week","timestamp":1694813107,"status":10,"status_display":"Accepted","runtime":"98 ms","url":"/submissions/detail/1050435149/","is_pending":"Not Pending","title":"Find the Difference of Two Arrays","memory":"49.3 MB","code":"\nclass FullSet<T> {\n  elements: Set<T>;\n  constructor(...elements: Array<T>) {\n    this.elements = new Set()\n    this.add(...elements);\n  }\n\n  add(...elements: Array<T>) {\n    for(let element of elements) {\n      this.elements.add(element);\n    }\n  }\n\n  clone() {\n    let result = new FullSet();\n    result.add(...this.elements.values());\n    return result;\n  }\n\n  contains(element: T) {\n    return this.elements.has(element);\n  }\n\n  equal(other_set: FullSet<T>) {\n    if(this.size() === other_set.size()) {\n      let result = true;\n      for(let element of this.elements) {\n        result = result && other_set.contains(element);\n      }\n      return result;\n    }\n    return false\n  }\n\n  remove(...elements: Array<T>) {\n    for(let i = 0; i < elements.length; i++) {\n         this.elements.delete(elements[i]);\n    }\n  }\n\n  values() {\n    return this.elements.values();\n  }\n\n  *[Symbol.iterator]() {\n    yield * this.elements;\n  }\n\n  union(other_set: FullSet<T>) {\n    let result = other_set.clone();\n    result.add(...this.elements);\n    return result;\n  }\n\n  intersect(other_set: FullSet<T>): FullSet<T> {\n    let result = new FullSet<T>();\n    for(let element of this.elements) {\n      if(other_set.contains(element)) {\n        result.add(element);\n      }\n    }\n    return result;\n  }\n\n  complement(universe: FullSet<T>) {\n    let result = universe.clone();\n    result.remove(...this.elements);\n    return result;\n  }\n\n  relativeComplement(other_set: FullSet<T>) {\n    let result = other_set.complement(this);\n    return result;\n  }\n\n  symmetricDifference(other_set: FullSet<T>) {\n    let result = this.union(other_set).relativeComplement(this.intersect(other_set));\n    return result;\n  }\n\n  crossProduct(other_set: FullSet<T>) {\n    let result = new FullSet();\n    for(let elementA of this.elements) {\n        for(let elementB of other_set.elements) {\n            result.add([elementA, elementB]);\n        }\n    }\n    return result;\n  }\n\n  *powerSetIter() {\n\n    function increment(bool_array: boolean[]) {\n        for(let i = 0; i < bool_array.length; i++) {\n            if(!bool_array[i]) {\n                bool_array[i] = true;\n                return;\n            }else{\n                bool_array[i] = false;\n            }\n        }\n    }\n    let count = [];\n    let elements = Array.from(this.elements);\n\n\n    for(let i = 0; i < elements.length; i++) {\n        count[i] = false;\n    }\n    for(let i=0; i < Math.pow(2, elements.length); i++) {\n        let choices = new FullSet();\n        for(let k = 0; k < elements.length; k++) {\n            if(count[k]) {\n                choices.add(elements[k]);\n            }\n        }\n        yield choices;\n        increment(count);\n    }\n  }\n\n  powerSet() {\n    return new FullSet(...this.powerSetIter())\n  }\n\n  cardinality() {\n    return this.elements.size;\n  }\n  \n  size() {\n    return this.elements.size;\n  }\n}\n\n// let A = new Bag(...[\"a\", \"a\", \"b\", \"c\", \"a\"]);\n// let B = new Bag(...[\"a\", \"b\", \"d\", \"d\"]);\n\n// console.log(Array.from(A.entries()));\n\n\nfunction findDifference(nums1: number[], nums2: number[]): number[][] {\n    let ns1 = new FullSet<number>(...nums1);\n    let ns2 = new FullSet<number>(...nums2);\n    return [Array.from(ns1.relativeComplement(ns2)) as number[], Array.from(ns2.relativeComplement(ns1)) as number[]];\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-difference-of-two-arrays","has_notes":false,"flag_type":1}