{"id":698591850,"lang":"typescript","lang_name":"TypeScript","time":"1 year, 5 months","timestamp":1652430183,"status":10,"status_display":"Accepted","runtime":"59 ms","url":"/submissions/detail/698591850/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"44.6 MB","code":"/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     val: number\n *     left: TreeNode | null\n *     right: TreeNode | null\n *     constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.left = (left===undefined ? null : left)\n *         this.right = (right===undefined ? null : right)\n *     }\n * }\n */\n\nfunction inorderTraversal(root: TreeNode | null): number[] {\n    if(root === null) {\n        return [];\n    }\n    return inorderTraversal(root.left).concat([root.val]).concat(inorderTraversal(root.right))\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}