{"id":698737141,"lang":"typescript","lang_name":"TypeScript","time":"1 year, 5 months","timestamp":1652453082,"status":10,"status_display":"Accepted","runtime":"118 ms","url":"/submissions/detail/698737141/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"47.9 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     val: number\n *     next: ListNode | null\n *     constructor(val?: number, next?: ListNode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.next = (next===undefined ? null : next)\n *     }\n * }\n */\n\n// class ListNode {\n//     val: number\n//     next: ListNode | null\n\n//     constructor(val?: number, next?: ListNode | null) {\n//         this.val = (val===undefined ? 0 : val)\n//         this.next = (next===undefined ? null : next)\n//     }\n// }\n\nfunction getVal(l: ListNode | null): number {\n    return l !== null ? l.val : 0;\n}\n\n// function addTwoNumbers(l1: ListNode | null, l2: ListNode | null): ListNode | null {\n//     let resultHead = null;\n//     let result = null;\n//     let currentLeft = l1;\n//     let currentRight = l2;\n//     let carry = 0;\n//     while(currentLeft !== null || currentRight !== null) {\n//         let sum = getVal(currentLeft) + getVal(currentRight) + carry;\n//         carry = sum >= 10 ? 1 : 0;\n//         if(result) {\n//             result.next = new ListNode(sum%10);\n//             result = result.next;\n//         }else{\n//             resultHead = new ListNode(sum%10);\n//             result = resultHead;\n//         }\n        \n//         if(currentLeft) {\n//             currentLeft = currentLeft.next;\n//         }\n//         if(currentRight) {\n//             currentRight = currentRight.next;\n//         }\n//     }\n//     if(carry > 0) {\n//         result.next = new ListNode(carry);\n//     }\n//     return resultHead;\n// };\n\nfunction getTail(l1: ListNode | null): ListNode | null {\n    return l1 !== null ? l1.next : null; \n}\n\nfunction addTwoNumbers(l1: ListNode | null, l2: ListNode | null, carry: number = 0): ListNode | null {\n   if(l1 == null && l2 == null) {\n       return carry > 0 ? new ListNode(carry) : null;\n   }\n   let sum = (getVal(l1)+getVal(l2)+carry)\n   return new ListNode(sum%10, addTwoNumbers(getTail(l1),getTail(l2), sum >= 10 ? 1 : 0))\n};","compare_resulttitle_slug":"add-two-numbers","has_notes":false,"flag_type":1}